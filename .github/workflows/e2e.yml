name: E2E Testing

on:
  push:
    branches:
      - main 
  pull_request:
    types: [opened, ready_for_review, synchronize]
    branches:
      - main 
  workflow_dispatch:

env:
  OP_SERVICE_ACCOUNT_TOKEN={{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 74JHVrorrZ3cuuov
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup 1Password CLI
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install PNPM
        run: npm i -g pnpm@9.6.0

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm exec playwright install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "$(date) - waiting for database to start"
            sleep 2
          done

      - name: Run migrations or seed database (if applicable)
        run: pnpm db:migrate:op && pnpm db:seed:op

      - name: Start application
        run: |
          pnpm build:envless
          pnpm start:op:e2e &
          pnpm start:oidc &

      - name: Run E2E tests
        run: pnpm e2e
        env:
          CI: true

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
