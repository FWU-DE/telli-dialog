name: E2E Testing

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, ready_for_review, synchronize]
    branches:
      - main
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: telli_dialog_db
          POSTGRES_PASSWORD: test1234
          POSTGRES_DB: telli_dialog_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Load 1Password Secrets
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          NEXTAUTH_URL: op://telli Engineering/.env.e2e chatbot/NEXTAUTH_URL
          DATABASE_URL: op://telli Engineering/.env.e2e chatbot/DATABASE_URL
          AUTH_SECRET: op://telli Engineering/.env.e2e chatbot/AUTH_SECRET
          OTC_SECRET_ACCESS_KEY: op://telli Engineering/.env.e2e chatbot/OTC_SECRET_ACCESS_KEY
          OTC_ACCESS_KEY_ID: op://telli Engineering/.env.e2e chatbot/OTC_ACCESS_KEY_ID
          OTC_S3_HOSTNAME: op://telli Engineering/.env.e2e chatbot/OTC_S3_HOSTNAME
          OTC_BUCKET_NAME: op://telli Engineering/.env.e2e chatbot/OTC_BUCKET_NAME
          # SENTRY_AUTH_TOKEN: op://telli Engineering/.env.e2e chatbot/SENTRY_AUTH_TOKEN
          SENTRY_ENVIRONMENT: op://telli Engineering/.env.e2e chatbot/SENTRY_ENVIRONMENT
          VIDIS_CLIENT_ID: op://telli Engineering/.env.e2e chatbot/VIDIS_CLIENT_ID
          VIDIS_CLIENT_SECRET: op://telli Engineering/.env.e2e chatbot/VIDIS_CLIENT_SECRET
          VIDIS_ISSUER_URI: op://telli Engineering/.env.e2e chatbot/VIDIS_ISSUER_URI
          API_URL: op://telli Engineering/.env.e2e chatbot/API_URL
          ENCRYPTION_KEY: op://telli Engineering/.env.e2e chatbot/ENCRYPTION_KEY
          SENTRY_DSN: op://telli Engineering/.env.e2e chatbot/SENTRY_DSN
          API_KEY: op://telli Engineering/.env.e2e chatbot/API_KEY
          BAVARIA_API_KEY: op://telli Engineering/.env.e2e chatbot/BAVARIA_API_KEY
          RABBITMQ_URI: op://telli Engineering/.env.e2e chatbot/RABBITMQ_URI

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install PNPM
        run: npm i -g pnpm@9.6.0

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: pnpm -filter telli-dialog exec playwright install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "$(date) - waiting for database to start"
            sleep 2
          done

      - name: Run migrations or seed database (if applicable)
        run: pnpm --filter telli-dialog db:migrate && pnpm --filter telli-dialog db:seed

      - name: Start application
        run: |
          NODE_ENV=test pnpm --filter telli-dialog build:envless
          pnpm --filter telli-dialog start:oidc &
          pnpm --filter telli-dialog start &

      - name: Run E2E tests
        run: pnpm --filter telli-dialog e2e
        env:
          CI: true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
