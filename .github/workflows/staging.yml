name: Build and deploy staging

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, ready_for_review, synchronize]
    branches:
      - main

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Install PNPM
        run: npm install -g pnpm@9.6.0
      - name: Install dependencies
        run: pnpm install

  audit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Audit dependencies
        run: pnpm audit --audit-level=critical

  check_formatting:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check formatting
        run: pnpm run format:check

  check_types:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check types
        run: pnpm run check-types

  check_linter:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check linter
        run: pnpm run lint

  check_unit_tests:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Check unit tests
        run: pnpm run test

  build_push_docker_image_dialog:
    name: Build and push docker image telli-dialog
    runs-on: ubuntu-latest
    needs: [audit, check_formatting, check_types, check_linter, check_unit_tests]
    timeout-minutes: 10
    if: |
      startsWith(github.head_ref, 'ci/') ||
      github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          COMMIT_HASH=${{ github.sha }}
          SENTRY_AUTH_TOKEN=${{ env.SENTRY_AUTH_TOKEN }} SENTRY_ENVIRONMENT=staging SENTRY_DSN=${{ env.SENTRY_DSN }} docker build -f ./apps/dialog/Dockerfile -t telli/chatbot:$COMMIT_HASH .
          docker tag telli/chatbot:$COMMIT_HASH telli.cr.de-fra.ionos.com/telli/chatbot:$COMMIT_HASH

      - name: Push Docker image to IONOS registry
        run: |
          echo "${{ secrets.IONOS_REGISTRY_TOKEN_GITHUB_PUSH }}" | docker login --username github-push --password-stdin telli.cr.de-fra.ionos.com
          COMMIT_HASH=${{ github.sha }}
          docker push telli.cr.de-fra.ionos.com/telli/chatbot:$COMMIT_HASH

  build_push_docker_image_admin:
    name: Build and push docker image telli-admin
    runs-on: ubuntu-latest
    needs: [audit, check_formatting, check_types, check_linter, check_unit_tests]
    timeout-minutes: 10
    if: |
      startsWith(github.head_ref, 'ci/') ||
      github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          COMMIT_HASH=${{ github.sha }}
          docker build -f ./apps/admin/Dockerfile -t telli/admin:$COMMIT_HASH .
          docker tag telli/admin:$COMMIT_HASH telli.cr.de-fra.ionos.com/telli/admin:$COMMIT_HASH

      - name: Push Docker image to IONOS registry
        run: |
          echo "${{ secrets.IONOS_REGISTRY_TOKEN_GITHUB_PUSH }}" | docker login --username github-push --password-stdin telli.cr.de-fra.ionos.com
          COMMIT_HASH=${{ github.sha }}
          docker push telli.cr.de-fra.ionos.com/telli/chatbot:$COMMIT_HASH

  deploy_apps:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: [build_push_docker_image_dialog, build_push_docker_image_admin]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG_FILE }}
          context: ''

      - name: Update Kubernetes deployment
        run: |
          COMMIT_HASH=${{ github.sha }}
          echo "Updating Kubernetes deployment with image tag $COMMIT_HASH"
          kubectl set image deployment/telli-dialog-stage \
            telli-dialog-stage=telli.cr.de-fra.ionos.com/telli/chatbot:$COMMIT_HASH -n telli-stage
          kubectl set image deployment/telli-admin-stage \
            telli-admin-stage=telli.cr.de-fra.ionos.com/telli/admin:$COMMIT_HASH -n telli-stage

      - name: Wait for rollout to complete
        run: |
          echo "Waiting for rollout to complete"
          kubectl rollout status deployment/telli-dialog-stage -n telli-stage
